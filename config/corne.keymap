/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define NAV  1
#define SYM  2
#define FUN  3

#define FUNLT(k1) &lt FUN k1

#define LSH(k1) &hm LSHIFT k1
#define LCH(k1) &hm LCTRL k1
#define LAH(k1) &hm LALT k1
#define LGH(k1) &hm LGUI k1

#define RSH(k1) &hm RSHIFT k1
#define RCH(k1) &hm RCTRL k1
#define RAH(k1) &hm RALT k1
#define RGH(k1) &hm RGUI k1

#define BRI_UP &kp C_BRI_UP
#define BRI_DN &kp C_BRI_DN
#define VOL_UP &kp C_VOL_UP
#define VOL_DN &kp C_VOL_DN
#define MUTE   &kp K_MUTE

&mt {
    tapping-term-ms = <250>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <160>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_terminal {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&terminal>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp ESC>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <7 8>;
        bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp TAB>;
        };
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <13 22>;
            bindings = <&caps_word>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp RET>;
        };
        combo_space_l {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp SPACE>;
        };
        combo_space_r {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp SPACE>;
        };
    };
    macros {
        terminal: terminal {
            label = "ZM_terminal";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp NUBS>
                , <&macro_release &kp LGUI>
                ;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        qwerty_layer {
            bindings = <
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //│          │  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │          │
                &none      &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P      &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  BSPC    │          │
                &none      LGH(A)     LAH(S)     LCH(D)     LSH(F)     &kp G          &kp H      RSH(J)     RCH(K)     RAH(L)     RGH(BSPC)  &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │  COMMA   │  DOT     │  ENTER   │          │
                &none      &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp RET   &none
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                                 FUNLT(ESC) &mo NAV    &kp LSHIFT     &kp SPACE  &mo SYM    &kp LALT
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
        numnav_layer {
            bindings = <
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //│          │  1       │  2       │  3       │  4       │  5       │   │  6       │  7       │  8       │  9       │  0       │          │
                &none      &kp N1     &kp N2     &kp N3     &kp N4     &kp N5         &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │          │          │          │          │          │   │          │          │          │          │          │          │
                &none      &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHIFT  &none         &none      &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┤──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │          │          │          │          │          │   │          │          │          │          │          │          │
                &none      &terminal  &none      &none      &caps_word  &none        &none       &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &none
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 │          │          │          │   │          │          │          │
                                                 &trans     &trans     &trans         &trans     &trans     &trans
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
        symbol_layer {
            bindings = <
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //│          │  !       │  @       │  #       │  $       │  %       │   │  ^       │  &       │  *       │  §       │          │          │
                &none      &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp NUBS   &kp NUHS   &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │  `       │  '       │  [       │  {       │  (       │   │  /       │  :       │  ;       │  -       │  =       │          │
                &none      LGH(GRAVE) LAH(SQT)   LGH(LBKT)  LSH(LBRC)  &kp LPAR       &kp FSLH   RSH(COLON) RCH(SEMI)  RAH(MINUS) RGH(EQUAL) &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │  ~       │  "       │  ]       │  }       │  )       │   │  \       │  |       │  ?       │  _       │  +       │          │
                &none      &kp TILDE  &kp DQT    &kp RBKT   &kp RBRC   &kp RPAR       &kp BSLH   &kp PIPE   &kp QMARK  &kp UNDER  &kp PLUS   &none
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 │          │          │          │   │          │          │          │
                                                 &trans     &trans     &trans         &trans     &trans     &trans
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
        fn_layer {
            bindings = <
            //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            //│          │          │          │          │          │          │   │  F1      │  F2      │  F3      │  F4      │  F5      │          │
                &none      BRI_DN     BRI_UP     MUTE       VOL_DN     VOL_UP         &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │          │          │          │          │          │   │  F6      │  F7      │  F8      │  F9      │  F10     │          │
                &none      &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHIFT &none          &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &none
            //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            //│          │          │          │          │          │          │   │   F11    │  F12     │          │          │          │          │
                &none      &bt BT_PRV &bt BT_NXT &kp C_PREV &kp C_PP   &kp C_NEXT     &kp F11   &kp F12     &none      &none      &none      &none
            //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
            //                                 │          │          │          │   │          │          │          │
                                                 &trans     &trans     &trans         &trans     &trans     &trans
            //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
    };
};